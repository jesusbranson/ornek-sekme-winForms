<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ımageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAVhYAAAJNU0Z0AUkBTAIBAQMB
        AAFwAQABcAEAASQBAAEkAQAE/wEJAQAI/wFCAU0BNgEEBgABNgEEAgABKAMAAZADAAEkAwABAQEAAQgF
        AAFAARQYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHAAQAB8AHKAaYBAAEzBQAB
        MwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5AQABgAF8Af8BAAJQAf8B
        AAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMAAWYDAAGZAwABzAIAATMD
        AAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFmAZkCAAFmAcwCAAFmAf8C
        AAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHMAWYCAAHMAZkCAALMAgAB
        zAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEAATMBAAGZAQABMwEAAcwB
        AAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEzAWYCAAEzAWYBMwEAATMC
        ZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZAWYBAAEzApkBAAEzAZkB
        zAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLMAQABMwHMAf8BAAEzAf8B
        MwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEAAWYBAAFmAQABZgEAAZkB
        AAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEAAWYBMwHMAQABZgEzAf8B
        AAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZAWYBAAFmApkBAAFmAZkB
        zAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/AQABZgH/AgABZgH/ATMB
        AAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEAAZkBAAGZAQABmQEAAcwB
        AAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFmATMBAAGZATMBZgEAAZkB
        ZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZAf8BAAGZAcwCAAGZAcwB
        MwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEzAQABmQHMAWYBAAGZAf8B
        mQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEAAcwBAAHMAQABmQEzAgAB
        zAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHMAWYBMwEAAZkCZgEAAcwB
        ZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHMApkBAAHMAZkBzAEAAcwB
        mQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHMAf8BMwEAAZkB/wFmAQAB
        zAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEAAcwBMwIAAf8CMwEAAf8B
        MwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHMAmYBAAH/AWYBmQEAAf8B
        ZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZAcwBAAH/AZkB/wEAAf8B
        zAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEzAQABzAH/AWYBAAL/AZkB
        AAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFmAQABIQEAAaUBAANfAQAD
        dwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHwAfsB/wEAAaQCoAEAA4AD
        AAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEAIOwE6wJ0CHMBHAPvAe0BcwEcAXMBHAEaAZkC
        cwGZArwB8gLzARwGdBATARUCEwEUAkQCIgFDAxMBFAEiBEQBFQEUJAAD7AHtAuwC7RbsAesC7APrA3QH
        cwLvAQcB7wIcAnMBmQEcAXQCHAEHArwC8wH0AxwEdBATARQDEwNEASIBQwMTARQBIgREAhQkAA3sAesD
        7AXrAewC6wLsAesD7AHrAuwC6wN0B3MBBwTvAe0BbgEcAZMBSwJzAZkBBwG8AfAB8wL0AxwEdBATARQD
        EwEUAkoBIgEVAxMBRAEiBEQBFAETJAAF7AHtBuwC6wFtAuoBEgITARIDbQfrAewB6wHsAusDdAZzAXQB
        BwH3Ae8BHAHsAUoCcwF0AXMBbgFzAZkBBwEaARsB8wH/AfQBcwF0ARwEdBATARQDEwEUAUoBSwEiARUD
        EwFEAUMBRAFKAkQBFAFtJAAK7ALrARIBFAEVARECDwEOAg8BEQFDARMCbQbrAewB6wLsB3QCcwF0AbwB
        7wEHAe8BHAJzAUsBcwFuAXMBdAEcAbwB8AEbAfQB9gG8ARwGdAcTAhQLEwJEAUoBRAEVAhQBEwNEAUoC
        RAEUAewkAATsAu0D7AHrARIBFQERAQ8DDgcAAQ8B6gJtB+sB7AFzBnQCcwF0AfACBwHvARwBcwJLAUQB
        SwF0AZMBmQEaAfEBGwH0AfYDHAF0A3MBdAYTBBQIEwIUARMDRAQUAkQBSgNEARQB9yQAAuwD7QTsAesB
        EgFDAg4CAAEOBgABEQHrARQB6gRtBesDcwF0BXMBHAG8AgcB7wEcAXMBRAFLAXMCFAEHAe8BGgHxARsB
        9AHzAXMCdAVzBhMBFAESAesBbQEUBhMBFAETARQERAEUAewBHAHrBkQBFAEHJAAB7QH3AQcB7QGSA+0D
        7AESAQ4BFQESAW4BSwJMAUQBRQEeAQAB6gHsARABFQETAeoDbQTrAnMIdAK8AgcBHAFzAW0BSgHqAQAC
        bQG8ARoBGwHzAfQBGwFzAnQEcwF0AeoEEwIUAXQCkwFuBRMB6gHsARMBFAJKAkQBbgOaAUoFRAETAfIk
        AAHtAZIB7QGSAfcBBwLtAZIB7QFFAfcBEgH3AW0CDgFFAewBEwEOAUQBCwJtAQABDgERARMD6gFtA+sB
        cwl0AZkB8AG8AQcBHAJuAXMBEQKTAeoBGgHxARsB8wH0AbwIcwHxAeoDEwEUAW0BkwF0ApMEEwFtAfEB
        8wGSARMBEgFLARUBRAFuAZoCmQFLAUQBFQNEAewB9CQAAu0F9wEcAQcB7AEPAbQB6gHsAg4BAAFEAW0C
        DgEkAUQBAAFDAgABDgEPARUBEgHqAW0D6wFzCHQBHAGZAfIBvAEHARwBcwJLAUQBkwGOAZMBmQHwAhsB
        9gGZAnMBdAVzAfQB8gFtARMCFAWTAW0CEwFtAfED9AEHAW0BSwFDAUQBbgGZAZMBdAFLAUQBQwJEAewB
        8wH0JAAB7ALtAZIC9wIcAfcB7QEOAQABEAEOAQABDwERARACDgEAASQBRAETAeoBDgJEAQABDgEPAREB
        6gFtAusBcwh0ARwBmQHyAbwBBwEcAnMCRAGTAW4BbwGZARoBGwHzAfQBmQhzAvQB8gFtARQBEgWTAXMB
        EwFtAfIF9AHxAUsBRAEVAW4BmQJ0AkQBQwFEAUoB8AL0JAAE7ALtAxwBBwEAARECRAJFAUYBRAELAQ4B
        CwHpAUUBbQFDAQ4BRAEUAUQBEAFDAQABQwHrAuwCcwh0AZkB8gG8AQcB7wFzAW4BEQFvAW4B6gFoAXMB
        vAHxARsB8wlzA/QB8gJtApMBcwKTARwB6wHzB/QBbgFEAUMBcwGZAXQBbgREAUsB8wL0JAAB7AHrA+wC
        7QGSARwB9wIkAUUBCwFGAUwCTQElAU0DRgEQAesBAAFEAUUB6gFDAUQBDgHrA+0Ccwd0ARwBmQEaAfAB
        BwEcAXMBSwEVAkUBRAFoAeoBmQEaAfMB9glzBPQB8gHsAZMBdAGTARwBkwEcAfII9AFuAUQBEQKTAXQB
        SwERAkQBSgFzA/QkAAETARUBEQHrBOwB7QKTAUUCDgFDAkcDTQJFAUYBEQFtAQADRQFuAeoBDgEUAZIB
        7QGSAXMIdAF5ApkB8AG8AXMBHAFKAQ4BRAFDAQsBRQFEAhoC8wlzBfQBGgWTARsJ9AFuAUQBQwGTAnQB
        SgEQA0QBcwP0JAABFAETAkMCEgFtARIC7AGOAUUBEAIRAW8BTQFMAXMCTAEaAUwBRAEPAUQBRQFEAUUB
        RAFuAREBFAL3AZIBcwh0ARwCmQHxAfACcwFDAe0BSgEQAQABRAHsAZkBvAHzARoJcwX0AfACkwF0AZMB
        mQEaCfQBbgFEARUBkwGaAZkBdAEQA0QBcwP0JAAB6gETAUQBFQFtARMB6wFtAUQB6wGTARMB6wHxAeoB
        bQHsAW0BEwHtAhMBTAFFAQ8FRQFuAeoBDwP3CnQCmQEbAbwBbgFzAW4B9wHsARMBEgFtAQcBGgGZAfMB
        mQlzBfQBBwGTAXQBjgKTAbwJ9AFzAUsBSgKTAnQBSgNEARwD9CQAAewBbQMSAe0B7AHrAW0B6wGRAWgB
        lAHsA00BTAFEAfcBvAFtAW4CbwEkA0UBSwFuAUsBEgP3AXMJdAGZAUsBGgEcAnMB7AHvAZIBFAFDAeoB
        BwGZAZMBGgJ0CHMF9AGZBJMCmQn0AW4BSgFuAZkBkwFvAnQBQwJEAXMD9CQAAesB7ALrAm0B7ALtAesB
        tgGUARYBdQZNAUsBrgEHAeMBFgFKAQEBRQFLAUUBbgFFAQAD9wJzCHQBmQGTAZkBbgFzAW4BHAGSAewB
        DwEQAW0B8AEHAZkLcwX0BJMDmQn0AW4BRAF0ApoCkwF0ARUBRAFKAe0D9CQAAUMBEwEVARQBEwHqBewB
        kwHjAZQBdQJNAUwDTQFMAUYB4wF1AUYBdAGTASMBRAFuAUUB6gL3Ae8Ccwh0AZkBdAGTAUsBcwIcAbwB
        7QFDAQ4BEgHyApkBcwGZCXME9AHwAZMBmQGTAZkBkwEaAZMBvAj0ARwBFQGTAZoBmQOTAkQBSgEcA/Qk
        AAHtAuwD6wLsAm0CFAG9ARYClAEWAeMBlAFNAXUCTQEWAW8BRQEPA5MBRQEkAW4B7QHsAe0DcwN0AXMD
        dAGZAW4BcwFEAZMBmQEcAbwBbQIAAUMB9AGZARoBdAEaCXME9AEHA5MDGgGZAZMI9AEHAUQBmgEaAZoD
        kwNEAQcD9CQAAUMBEgEQARUBEAETARQBQwHqAUMC7AEcAQcBlAG9B5QBFwEWAW0CCwGUA5MBRAERARUB
        6gVzBXQBmQFLAZMBRAIcAQcB8AEHARMB6gHsAfQCGgFLAZMJcwT0ARwDkwEaA5kBHAj0AbwBSgGaAhoB
        kwKZAUoBRAEVAfED9CQAApEB9wHsAu0BkgL3AZIB6wHsA/cBkgHtAewBbQHrAeoBEgEVAREBbwHsAUwB
        TQGTAbwCkwHvAewBbQHrBnMFdAFLAZMBIwGZAe8BvAHwAfEB7QFtAbwCGwEaAUsEcwFRAnMDUQT0AW4C
        kwFuAZkBdAGTAZkBbgj0ARoBSgGZAZMBmgKTAXMBSgEVAUQB8wP0JAABkQS0ArUBuwG1BrsC7wO7AeoB
        bQEUARABDgGTAZIB9wHvAfcB7AIHAvcB7QdzAnQBmQJLAZMBRAF0ARwB7wEaAfQB8wHyAfMCGwGZAW4B
        SwF0CEsE9AFuAZMBbgFLAZkCbgGTAW4I9AHzAUQBdAFtAZMBmQJuAUQBQwFuBPQkAAW0C7sB6wHvArsB
        7AHrARIBFAEOAU0B9wHvAewB9wHrAQcEuwdzAnQBkwJLARwBSwFzAXQB6gG8AvMC9AEHARoBcwGZAnQI
        SwT0AeoBkwFuAXQBmQEcAW4BkwFtCfQBSgGTAXMBmQGaAXMBbgIVAZME9CQAAbUBtAK1AfcDtQe7AQkB
        8AH3Ae8BvAGSAZEB6wHqARQBSwH3Ae8BEwHvAewBvAHvAbUB9wGRBnMEdAFLAXQBHAJ0AZMBEAFDAfMB
        GwHzARsBDgEHAXMBGgJ0AksGSgP0AfMBSgGTBRoBmQESAfMI9AFLAXQDGgGZAW4CRAHyBPQkAAEJAbwB
        CQrwAfEB8AHxARkB8gHsAbwBBwHsAe0CkQFtAW4B7wHsAW0B8AG8A/ABvAZzA3QBkwJuAXQCkwEHAe0B
        SgMbARwBFQHwAXMBGgKTAUsHSgP0AfIBSwGTA5kCGgGZAUoB8Qj0AnMDGgGTAUsBRAFtBfQkAAK8A/AB
        GQHwBPEHGQPyAfEDGgGZAb0BtgK8BfABvAJRBXMGdAGTAXMCBwFzAxsBBwEcARsCmQGTAZkBSwdKA/QB
        8wFLAZMCmQG8AhoBkwFKAfEI9AEcAW4CGgGZAW8BSgFEAewF9CQAArwD8AXxCfIBGQLyAhkE8gEZAvED
        8AK8A1EDcwR0AZkCcwEcAXMBkwIaARsBGgEbARoBGwEaBJkBSwVKAkQE9AFKAZMEmQGTAXQBRAHzCPQB
        BwFKApMBdAFLAUoBRAEHBfQkAAG8BPAD8QvyAfMG8gEZAvIF8QLwA1EDcwR0ARoBmQKTARwBkwG8AhsB
        GgQbARoCmQEaBEoERAT0AW0BbgF0Am4BSwFKAUQB6gn0AfMBRAFDA0sBRAFKAfMF9CQAA/AD8QTyD/MI
        8gPxAlEEcwV0A5kBvAKZAxoDGwIaAZkBGgGZA0oDRAIjBPQB7AERAUQBQwEQAREBQwEVAesK9AHsARUB
        RAFKAkQB7wb0JAAD8QTyC/MD9AjzBfIC8QhzBHQBmQG8ARoBvAQaARsB8wIbAhoBcwFLAkoBRAUjBPQB
        7wEPARUBQwERAQ8BEAEVARwK9AHwAkoCRAFzB/QkAALxA/IE8wH0BPMF9AH/BfQE8wbyAfEKcwJ0ARwB
        vAEbAhoCGwEaARsC8wIbAXMDSwJKBSMF9AHsARUCQwERAQ8BFQG8C/QB8AEcAW4BHAj0JAAC8QTyAvMB
        9ALzBfQF/wf0AvMF8gHxC3MDHAIbAhoCGwTzARoBbgNLBEoBRAIjBfQB8wEUAkMBEQEQARQB8xf0JAAH
        8gLzCPQD/wj0BPMD8gHxC3MFHAEaARsB8wHyAfMBGwKZAnMESwVKASMG9AG8AeoBEwEUAW0BvBj0JAAG
        GQPzEPQH8wTyDXMGHAHvARwB7QRzAW4ESwVKJPQkAALwAfEDGQPzEPQH8wTyAuwEcwHsBXMB7QEcAe0D
        HALtAXMBHARzAm4FSwNKJPQkAAFCAU0BPgcAAT4DAAEoAwABkAMAASQDAAEBAQABAQUAAdABAhYAA///
        AP8A0wAL
</value>
  </data>
</root>